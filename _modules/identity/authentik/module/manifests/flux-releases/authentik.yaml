apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: authentik
  namespace: identity
spec:
  interval: 10m
  timeout: 5m
  chart:
    spec:
      chart: authentik
      version: "2024.2.1"
      sourceRef:
        kind: HelmRepository
        name: authentik
        namespace: flux-repos
      interval: 5m
  releaseName: authentik
  targetNamespace: identity
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  test:
    enable: false
  driftDetection:
    mode: enabled
    ignore:
      - paths: ["/spec/replicas"]
        target:
          kind: Deployment
  dependsOn:
    - name: authentik-db
  valuesFrom:
    - kind: Secret
      name: authentik.identity-db.credentials.postgresql.acid.zalan.do
      valuesKey: password
      targetPath: authentik.postgresql.password
    - kind: Secret
      name: authentik-secret-key
      valuesKey: secretkey
      targetPath: authentik.secret_key

  values:
    authentik:
      # This sends anonymous usage-data, stack traces on errors and
      # performance data to sentry.io, and is fully opt-in
      error_reporting:
        enabled: false
      postgresql:
        host: identity-db
      email:
        host: ${smtp_server}
        port: ${smtp_port}
        username: ${smtp_user}
        password: ${smtp_password}
        use_tls: ${smtp_tls}
        from: ${from_email}
    envFrom:
      - secretRef:
          name: authentik-bootstrap
    envValueFrom:
      AUTHENTIK_BOOTSTRAP_PASSWORD:
        secretKeyRef:
          key: password
          name: authentik-bootstrap
      AUTHENTIK_BOOTSTRAP_TOKEN:
        secretKeyRef:
          key: token
          name: authentik-bootstrap
      AUTHENTIK_BOOTSTRAP_EMAIL:
        secretKeyRef:
          key: email
          name: authentik-bootstrap

    pdb:
      server:
        enabled: true
        maxUnavailable: 1
      # worker:
      #   enabled: true
      #   minAvailable: 1

    replicas: 2
    worker:
      replicas: 1
    redis:
      enabled: true

    ingress:
      enabled: true
      annotations:
        alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
        alb.ingress.kubernetes.io/ssl-redirect: "443"
      tls:
        - hosts:
            - identity.ref.logsr.life
      hosts:
        - host: identity.ref.logsr.life
          paths:
            - path: /
              pathType: Prefix
      ingressClassName: alb-partition

    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                    - casdoor-helm-charts
            topologyKey: kubernetes.io/hostname
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                    - linux
                - key: kubernetes.io/arch
                  operator: In
                  values:
                    - amd64


    topologySpreadConstraints:
      - maxSkew: 2
        minDomains: 2
        whenUnsatisfiable: DoNotSchedule
        topologyKey: topology.kubernetes.io/zone
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: casdoor-helm-charts
        matchLabelKeys:
          - pod-template-hash
