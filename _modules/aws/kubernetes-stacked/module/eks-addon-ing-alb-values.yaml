enableCertManager: true


clusterName: "${clusterName}"
serviceAccount:
  annotations:
    eks.amazonaws.com/role-arn: ${irsaarn}

replicas: 2

controller:
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 1
      memory: 256Mi
podDisruptionBudget:
  enabled: true
affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
                - aws-load-balancer-controller
            - key: app.kubernetes.io/instance
              operator: In
              values:
                - aws-load-balancer-controller
        topologyKey: kubernetes.io/hostname
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/os
              operator: In
              values:
                - linux
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        preference:
          matchExpressions:
            - key: role
              operator: NotIn
              values:
                - system
      - weight: 100
        preference:
          matchExpressions:
            - key: kubernetes.io/arch
              operator: In
              values:
                - arm64
      - weight: 10
        preference:
          matchExpressions:
            - key: computeClass
              operator: In
              values:
                - general
topologySpreadConstraints:
  - maxSkew: 1
    topologyKey: topology.kubernetes.io/zone
    whenUnsatisfiable: DoNotSchedule
    labelSelector:
      matchLabels:
        app.kubernetes.io/name: aws-load-balancer-controller
        app.kubernetes.io/instance: aws-load-balancer-controller
    matchLabelKeys:
      - pod-template-hash
priorityClassName: "system-cluster-critical"
