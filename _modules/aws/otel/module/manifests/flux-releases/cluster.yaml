apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: otel-cluster
  namespace: kube-system
spec:
  interval: 10m
  timeout: 5m
  chart:
    spec:
      chart: opentelemetry-collector
      version: "0.118.0"
      sourceRef:
        kind: HelmRepository
        name: otel
        namespace: flux-repos
      interval: 5m
  releaseName: otel-cluster
  targetNamespace: kube-system
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  test:
    enable: false
  values:
    mode: deployment

    image:
      repository: "otel/opentelemetry-collector-k8s"

    command:
      name: "otelcol-k8s"
    extraEnvs:
      - name: K8S_NODE_NAME
        valueFrom:
          fieldRef:
            fieldPath: spec.nodeName

    serviceAccount:
      create: true
    clusterRole:
      create: true
    service:
      enabled: false
    presets:

      # Configures the collector to collect kubernetes events.
      # Adds the k8sobject receiver to the logs pipeline
      # and collects kubernetes events by default.
      # Best used with mode = deployment or statefulset.
      # See https://opentelemetry.io/docs/kubernetes/collector/components/#kubernetes-objects-receiver for details on the receiver.
      kubernetesEvents:
        enabled: true
      # Configures the Kubernetes Cluster Receiver to collect cluster-level metrics.
      # Adds the k8s_cluster receiver to the metrics pipeline
      # and adds the necessary rules to ClusteRole.
      # Best used with mode = deployment or statefulset.
      # See https://opentelemetry.io/docs/kubernetes/collector/components/#kubernetes-cluster-receiver for details on the receiver.
      clusterMetrics:
        enabled: true
    config:
      extensions:
        health_check:
          endpoint: "[$${env:MY_POD_IP}]:13133"
      processors:
        memory_limiter:
          check_interval: 5s
          limit_percentage: 80
          spike_limit_percentage: 25
      receivers:
        jaeger:
          protocols:
            grpc:
              endpoint: "[$${env:MY_POD_IP}]:14250"
            thrift_http:
              endpoint: "[$${env:MY_POD_IP}]:14268"
            thrift_compact:
              endpoint: "[$${env:MY_POD_IP}]:6831"
        otlp:
          protocols:
            grpc:
              endpoint: "[$${env:MY_POD_IP}]:4317"
            http:
              endpoint: "[$${env:MY_POD_IP}]:4318"
        prometheus:
          config:
            scrape_configs:
              - job_name: opentelemetry-collector
                scrape_interval: 10s
                static_configs:
                  - targets:
                      - "[$${env:MY_POD_IP}]:8888"
        zipkin:
          endpoint: "[$${env:MY_POD_IP}]:9411"
      exporters:
        otlphttp:
          endpoint: http://otel-node-opentelemetry-collector:4318
      service:
        pipelines:
          logs:
            receivers:
              - k8sobjects
            processors:
              - batch
            exporters:
              - otlphttp
          metrics:
            exporters:
              - otlphttp
            processors:
              - batch
            receivers:
              - k8s_cluster
        telemetry:
          logs:
            encoding: json
          metrics:
            address: "[$${env:MY_POD_IP}]:8888"
