apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: logscale
spec:
  interval: 10m
  timeout: 5m
  chart:
    spec:
      chart: logscale
      version: "7.0.0-next.118"
      sourceRef:
        kind: HelmRepository
        name: logscale-contrib-ls
        namespace: flux-system
      interval: 5m
  releaseName: logscale
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  test:
    enable: false
  driftDetection:
    mode: warn
    ignore:
      - paths: ["/spec/replicas"]
        target:
          kind: Deployment
  dependsOn:
    - name: kafka-topics
  valuesFrom:
    - kind: ConfigMap
      name: clustervars
      valuesKey: platformType
      targetPath: platform.provider
    - kind: ConfigMap
      name: clustervars
      valuesKey: platformType
      targetPath: humio.buckets.type
    - kind: ConfigMap
      name: clustervars
      valuesKey: aws_region
      targetPath: humio.buckets.region
    - kind: ConfigMap
      name: clustervars
      valuesKey: aws_region
      targetPath: humio.buckets.region
    - kind: ConfigMap
      name: logscalevars
      valuesKey: bucket_storage
      targetPath: humio.buckets.storage
    - kind: ConfigMap
      name: logscalevars
      valuesKey: bucket_prefix
      targetPath: humio.buckets.prefix
    - kind: ConfigMap
      name: logscalevars
      valuesKey: kafka_prefix
      targetPath: humio.kafka.topicPrefix
    - kind: ConfigMap
      name: logscalevars
      valuesKey: logscale_sa_name
      targetPath: humio.serviceAccount.name
    - kind: ConfigMap
      name: logscalevars
      valuesKey: logscale_sa_arn
      targetPath: humio.serviceAccount.annotations.eks\.amazonaws\.com/role-arn
    - kind: ConfigMap
      name: logscalevars
      valuesKey: logscale_license
      targetPath: humio.license

  values:
    fullnameOverride: logscale
    humio:
      image:
        tag: 1.118.2
      fqdn: logscale-ops.ref.loglabs.net
      fqdnInputs: logscale-ops-inputs.ref.loglabs.net
      kafka:
        manager: external
        prefixEnable: true
        bootstrap: kafka-kafka-bootstrap:9092

      config:
        enableInternalLogger: "true"
      auth:
        rootUser: logscaleadmin
        method: saml
        saml:
          signOnUrl: https://identity.ref.loglabs.net/login/saml/authorize/admin/loglabs-ref-logscale
          # entityID: https://identity.ref.loglabs.net/login/saml/authorize/admin/loglabs-ref-logscale
          entityID: https://identity.ref.loglabs.net
          idpCertificate: MIIE3TCCAsWgAwIBAgIDAeJAMA0GCSqGSIb3DQEBCwUAMCgxDjAMBgNVBAoTBWFkbWluMRYwFAYDVQQDEw1jZXJ0LWJ1aWx0LWluMB4XDTI0MDExNzE2MTYxMFoXDTQ0MDExNzE2MTYxMFowKDEOMAwGA1UEChMFYWRtaW4xFjAUBgNVBAMTDWNlcnQtYnVpbHQtaW4wggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDDXlyJr50IMP2PsPhB6gbzfEPFy9H/s19E2ykT8blcljeLrrx4gab0glKmQWryfFetb+47pjmASypCW55cJ2zAh9dH4r3UHw0Lb3V7LcpEv6RqqwLZvJi04bokLu8h06Wx1+LCnrQWUI9rpUtJl1k7Ac2Vzi+iLVpFfU+mV4rY/UEbTHewzfBFqspx7LI8kTUWfD1vT0QXuvvfxmnSr8rg8+XKDER66qWpi9k97HwBzyw7eVBJjHYH02rjAK7M2JDUyB3bXKE5ST192XhAkbIdfrSS6s4/vwvaDH1mDPIBZDsaD9ddDLoIq3lFev40XjWONepYRqQvHJ8IBUbgi30hPNuTR77xGr8SE8siHjHtiHd/xqZEV0HcqRTvhysoDHT2HR9spQ2u+LIW0OOikNr0rL6uLkHsETxjAZkkpkKsG/Rvdg/35Lb9E0oguRwg0dlbKt87YSIKuf6staSrkg1a8sWGfCUlP3fgDUvXIk+UmfviYfYb+BeQ/YC6NxeD2b7sgpHDGEo4lRj18S6e/czq4qg0suZ1o9C8vLo/7BI7Gkl6eXbfVhUrpgHyfXxTSdA13shbNEtoSv1Bd5cg3jsyKLO4CpxfoQaJGL8WpgMm8iSO9l1OchKlfVO4Ej/m/2Qs3P4CJy6y/Gf4MAauTi9FDZmwLFOpZ68jYXLNKGMxMQIDAQABoxAwDjAMBgNVHRMBAf8EAjAAMA0GCSqGSIb3DQEBCwUAA4ICAQBax2TJLkij7Aq6hFwlsFf666vNUe8taPyP/j++cV0lhN8RkY8qhEI5vEYyEnyAAZuc6oHii8nCTcvsYic+UmQh3apIp4I5PwWwtOytuYF/a51YReAncZdObwrZ0wWAEbVdZKaqAyfOOk4oRedZCx84coSoe9ClHkHw/2KgrvMGSjwBdiZ4CoYaq5dvQpcGZnd6iDPs1mFRozG+wnvqXCOYk8ZpuNOr4jhkgITRYyYGV06PFK/KPOk8qCi9AqROroGYdy2uvt7438Vl+Z7AQCoOh6otBrABx6KmBFHt8zCDOqdFRRI/o57Q/mBBmKJ8x3nLkpVJqf3i8Uv5Bn8u50j4y1vSW+3kbmB1tJhKJUhkDZJrBDmThnbpXiaD9Yalu8tBDNFqvcmV29OUv3qchAdE58QsdPb1xJPZOcdrNzOy9RZj+8lBTdU1lrq3yOfqxNulK/1W87Ekf54GU/kHTn5+xR5nZvE9A3escdT/x/9BsiETYZLhQwdbE63QdFBlo9kWnl2lj3UVz9zPsqVK43t+giiQqhW02hYp4nINGb7rHVTdqHAAW9vU5LOzXd7eicCRsoGi1f2odr7+ffrSuWP0aDCqgAFky4QBb6kWYKozKdtIP/fbem8v/ITwUhdR27oE2dWrveT9k1ycHq4wqQgmwa0UWOKA2icao5LRqy4Z9Q==

      nodeCount: 3
      #In general for these node requests and limits should match
      resources:
        requests:
          memory: 24Gi
          cpu: 2
        limits:
          memory: 24Gi
          cpu: 2
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: "kubernetes.io/arch"
                    operator: "In"
                    values: ["amd64"]
                  - key: "kubernetes.io/os"
                    operator: "In"
                    values: ["linux"]
                  - key: "karpenter.k8s.aws/instance-local-nvme"
                    operator: Gt
                    values:
                      - "910"
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: humio.com/node-pool
                    operator: In
                    values:
                      - "logscale"
                      - "logscale-ingest-only"
                      - "logscale-http-only"
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                      - "zookeeper"
                      - "kafka"
              topologyKey: "kubernetes.io/hostname"
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchExpressions:
              - key: humio.com/node-pool
                operator: In
                values:
                  - logscale
      tolerations:
        - key: topolvm.io/local
          operator: "Equal"
          value: "true"
      dataVolumePersistentVolumeClaimSpecTemplate:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: "900Gi"
        # storageClassName: "gp3"
        storageClassName: "nvme-xfs"
      frontEndDataVolumePersistentVolumeClaimSpecTemplate:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: "10Gi"
        storageClassName: "gp3"
      priorityClass: partition-high

      ingress:
        ui:
          className: alb-partition
          enabled: true
          tls: true
          annotations:
            alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
            alb.ingress.kubernetes.io/ssl-redirect: "443"
        inputs:
          className: alb-partition
          enabled: true
          tls: true
          annotations:
            alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
            alb.ingress.kubernetes.io/ssl-redirect: "443"

      nodepools:
        ingest:
          priorityClass: partition-medium
          nodeCount: 3
          resources:
            limits:
              cpu: "2"
              memory: 3Gi
            requests:
              cpu: "2"
              memory: 3Gi
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: "kubernetes.io/arch"
                        operator: "In"
                        values: ["amd64"]
                      - key: "kubernetes.io/os"
                        operator: "In"
                        values: ["linux"]
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: humio.com/node-pool
                        operator: In
                        values:
                          - "logscale"
                          - "logscale-ingest-only"
                          - "logscale-http-only"
                  topologyKey: "kubernetes.io/hostname"
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: topology.kubernetes.io/zone
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchExpressions:
                  - key: humio.com/node-pool
                    operator: In
                    values:
                      - logscale-ingest-only
        ui:
          priorityClass: partition-low
          nodeCount: 3
          resources:
            limits:
              cpu: "2"
              memory: 3Gi
            requests:
              cpu: "2"
              memory: 3Gi
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: "kubernetes.io/arch"
                        operator: "In"
                        values: ["amd64"]
                      - key: "kubernetes.io/os"
                        operator: "In"
                        values: ["linux"]
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: humio.com/node-pool
                        operator: In
                        values:
                          - "logscale"
                          - "logscale-ingest-only"
                          - "logscale-http-only"
                  topologyKey: "kubernetes.io/hostname"
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: topology.kubernetes.io/zone
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchExpressions:
                  - key: humio.com/node-pool
                    operator: In
                    values:
                      - "logscale-http-only"
